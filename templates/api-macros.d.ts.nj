{%- macro method_(name, method) -%}
{{ name | mname }}: (parameters: {{ parameters_(method) }}, callback: {{ callback_(method) }}) => Request;
{%- endmacro -%}

{%- macro resource_(name, resource) -%}
{{ name | mname }}: {
    {%- if resource.methods -%}
        {{ br }}
        {%- for name, method in resource.methods -%}
            {{ method_(name, method) | indent(4, true) }}
        {%- endfor -%}
    {%- endif -%}
    {%- if resource.resources -%}
        {{ br }}
        {%- for name, resource in resource.resources -%}
            {{ resource_(name, resource) | indent(4, true) }}
        {%- endfor -%}
    {%- endif -%}
};
{%- endmacro -%}

{%- macro parameters_(method) -%}
{%- if method.parameters -%}
{ [key: string]: any;{{' '}}
    {%- for name, parameter in method.parameters -%}
        {{ name | mname }}{%- if not parameter.required -%}?{%- endif -%}: {{ schemaType_(parameter) }}
        {%- if not loop.last -%}, {% endif -%}
    {%- endfor -%}
}
{%- else -%}
any
{%- endif -%}
{%- endmacro -%}

{%- macro callback_(method) -%}
{%- if method.response -%}
(error: any, body: {{ schemaType_(method.response) }}, response: any) => void
{%- else -%}
(error: any, body: any, response: any) => void
{%- endif -%}
{%- endmacro -%}

{%- macro schema_(name, schema) -%}
{%- if schema.type == 'object' -%}
export interface {{ name }} {{ schemaObject_(schema) }}
{%- else -%}
export type {{ name }} = {{ schemaType_(schema) }};
{%- endif -%}
{%- endmacro -%}

{%- macro schemaProperty_(name, property) -%}
{{ name | mname }}: {{ schemaType_(property) }};
{%- endmacro -%}

{%- macro schemaType_(definition) -%}
{%- if definition.type == 'null' -%}
void
{%- elif definition.type == 'string' -%}
string
{%- elif definition.type == 'boolean' -%}
boolean
{%- elif definition.type == 'number' -%}
number
{%- elif definition.type == 'integer' -%}
number
{%- elif definition.type == 'object' -%}
{{ schemaObject_(definition) }}
{%- elif definition.type == 'array' -%}
{%- if definition.items -%}{{ schemaType_(definition.items) }}{%- else -%}any{%- endif -%}[]
{%- elif definition.$ref -%}
{{ definition.$ref }}
{%- else -%}
any
{%- endif -%}
{%- endmacro -%}

{%- macro schemaObject_(definition) -%}
{%- if definition.properties or definition.additionalProperties -%}
    {%- if definition.properties -%}
        {{ schemaObjectProperties_(definition.properties) }}
    {%- endif -%}
    {%- if definition.properties and definition.additionalProperties %} & {% endif -%}
    {%- if definition.additionalProperties -%}
        {{ schemaObjectAdditionalProperties_(definition.additionalProperties) }}
    {%- endif -%}
{%- else -%}
    {}
{%- endif -%}
{%- endmacro -%}

{%- macro schemaObjectProperties_(properties) -%}
{
    {%- for name, property in properties -%}
        {%- if loop.first -%}{{ br }}{%- endif -%}
        {{ schemaProperty_(name, property) | indent(4, true) }}
    {%- endfor -%}
}
{%- endmacro -%}

{%- macro schemaObjectAdditionalProperties_(additionalProperties) -%}
{
    [name: string]: {{ schemaType_(additionalProperties) | indent(4) }};
}
{%- endmacro -%}
